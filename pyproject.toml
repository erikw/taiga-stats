[tool.poetry]
name = "taiga-stats"
version = "1.7.0"
description = "Generate statistics from Taiga and produce burnup diagrams, CFDs, dependency graphs and more."
authors = ["Erik Westrup <erik.westrup@icloud.com>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/erikw/taiga-stats"
keywords = ["taiga", "generator", "stats", "cfd", "dependency graph"]
classifiers = [
    "Topic :: Utilities",
    "Topic :: Software Development"
]
include = ["CHANGELOG.md", "LICENSE", "README.md"]


[tool.poetry.dependencies]
matplotlib = "^3.10"
python = "^3.11, < 3.13" 
python-taiga = "^1.0.0"
single-source = ">=0.2,<0.5"
packaging = "^24.2" # Pinned for matplotlib and mkdocs. If not pinned, build on travis fails, but not locally.

[tool.poetry.group.dev.dependencies]
autoflake = "^1.4"
autoimport = "^0.11"
black = "25.1.0" # Use same version as super-linter: https://github.com/super-linter/super-linter/blob/main/dependencies/python/black.txt
pylint = "^3.3"
ipdb = "^0.13"
isort = "^5.9"
mkdocs = "1.6.0"  # Keep this in sync with docs/requirements.txt used by .readthedocs.yaml
pyyaml = "^6.0.2" # Pin this dependency of mkdocs as 6.0.2 fixes build issue with deprecated openssl https://github.com/urllib3/urllib3/issues/2168. Remove this line once mkdocs uses this version or higher of pyyaml.
pudb = "^2021.2.2"
ruff = "^0.11.6"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# By defining this, we can run
# $ poetry run taiga-stats
# instead of the longer
# $ poetry run python -m taiga_stats
# This short name will also be the name of the script being installed to the system when installing the wheel from pip.
# NOTE python modules should use underscores, python packages not (PEP8)...
taiga-stats = 'taiga_stats.__main__:main'

[tool.isort]
line_length = 160
profile = "black"

[tool.black]
line_length = 160

[tool.pylint]
max-line-length = 160
disable = "E0401, C0103, C0114, C0116, C0200, C0209, C0413, R0903, R0912, R0914, R0915, R1710, W1308"

[tool.ruff]
line-length = 160
indent-width = 4

[tool.ruff.lint]
# All supported rules: https://docs.astral.sh/ruff/rules/
select = [
    # pycodestyle
    "E",
    # Pyflakes
    "F",
    # pyupgrade
    #"UP",
    # flake8-bugbear
    "B",
    # flake8-simplify
    #"SIM",
    # isort
    "I",
]


[tool.ruff.format]
quote-style = "double"
indent-style = "space"